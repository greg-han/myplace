{
  "_from": "logger",
  "_id": "logger@0.0.1",
  "_inBundle": false,
  "_integrity": "sha1-ywgXH4pvb2dLhJna31C+1L77csQ=",
  "_location": "/logger",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "logger",
    "fetchSpec": "latest",
    "name": "logger",
    "raw": "logger",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/logger/-/logger-0.0.1.tgz",
  "_shasum": "cb08171f8a6f6f674b8499dadf50bed4befb72c4",
  "_shrinkwrap": null,
  "_spec": "logger",
  "_where": "/home/gman/myplace",
  "author": {
    "email": "aaron@quirkey.com",
    "name": "Aaron Quint"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "A simple logging library that combines the simple APIs of Ruby's logger.rb and browser-js console.log()",
  "devDependencies": {},
  "engines": {
    "node": ">=0.1.90"
  },
  "main": "logger",
  "name": "logger",
  "optionalDependencies": {},
  "readme": "# node-logger\n\n[http://github.com/quirkey/node-logger](http://github.com/quirkey/node-logger)\n\n## SUMMARY\n\nA simple logging library that combines the simple APIs of Ruby's logger.rb and browser-js console.log()\n\n## USAGE\n\nA logger has 5 different levels of logging in a specific order:\n\n    'fatal', 'error', 'warn', 'info', 'debug'\n    \nEach of these log levels has its own method on the logging instance. You can set the maximum log level on a logger at runtime. \n\nBy default, a logger writes to STDOUT, but given a writeable file path, it will log directly to a file.\n\n### Instantiation:\n\n    // node/common.js style \n    var logger = require('./logger').createLogger(); // logs to STDOUT\n    var logger = require('./logger').createLogger('development.log'); // logs to a file\n\n### Logging:\n\nAny of the logging methods take `n` arguments, which are each joined by ' ' (similar to `console.log()`). If an argument is not a string, it is string-ified by `sys.inspect()`\n\n    logger.info('loading an array', [1,2,3], 'now!');\n    //=> info [Sat Jun 12 2010 01:12:05 GMT-0400 (EDT)]  loading an array [ 1, 2, 3, [length]: 3 ] now!\n    logger.debug('this wont be logged');\n    //=> false\n    logger.setLevel('debug');\n    logger.debug('this will be logged now');\n    //=> debug [Sat Jun 12 2010 01:12:54 GMT-0400 (EDT)]  this will be logged now\n\n### Customization:\n\nYou can completely customize the look of the log by overriding the `format()` method on a logger.\n\n    logger.format = function(level, date, message) {\n      return date.getTime().toString() + \"; \" + message;\n    };\n    logger.debug('message');\n    //=> 1276365362167;  message\n    \n## COMMENTS/ISSUES:\n\nF-f-fork it, baby.\n\n## LICENSE\n\nMIT, see the source.",
  "readmeFilename": "README.md",
  "version": "0.0.1"
}
